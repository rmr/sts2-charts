---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  labels:
    app: {{.Values.specialresource.metadata.name}}-{{.Values.groupName.driverContainer}}
  name: {{.Values.specialresource.metadata.name}}-{{.Values.groupName.driverContainer}}
---
apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  labels:
    app: ice-build-{{ template "build.name" . }}
  name: ice-build-{{ template "build.name" . }}
  namespace: {{.Values.specialresource.spec.namespace}}
  annotations:
    specialresource.openshift.io/wait: "true"
    specialresource.openshift.io/driver-container-vendor: "ice-special-resource"
spec:
  resources:
    limits:
      ephemeral-storage: "10Gi"
  runPolicy: "Serial"
  triggers:
    - type: "ConfigChange"
    - type: "ImageChange"
  source:
    dockerfile: |
      {{- if .Values.runArgs.buildIce }}
      # STAGE 0
      ARG ICE_SRC=quay.io/silicom/ice-driver-src:1.7.16
      ARG BUILD_BASE
      FROM $ICE_SRC
      RUN echo commmand

      # STAGE 1
      FROM $BUILD_BASE
      MAINTAINER "rmr@silicom.dk"
      ARG ICE_VERSION
      ARG ICE_SRC
      WORKDIR /build
      COPY --from=0 /charts/ice.tgz ice.tgz
      RUN tar xvf ice.tgz
      RUN make -C ice-$ICE_VERSION/src -j4
      {{- end }}

      # STAGE 2
      FROM registry.access.redhat.com/ubi8/ubi-minimal
      {{- if .Values.runArgs.buildIce }}
      RUN microdnf install pciutils kmod procps iproute nc util-linux
      ARG ICE_VERSION
      COPY --from=1 /build/ice-$ICE_VERSION/src/*.ko /
      COPY --from=1 /build/ice-$ICE_VERSION/ddp/*.pkg /root/ice.pkg
      {{- end }}
  strategy:
    dockerStrategy:
      buildArgs:
        {{- range $arg := .Values.buildArgs }}
        - name: {{ $arg.name }}
          value: {{ $arg.value }}
        {{- end }}
        - name: BUILD_BASE
          value: {{.Values.driverToolkitImage}}
  output:
    to:
      kind: DockerImage
      name: "{{.Values.driverRegistry}}/{{.Values.specialresource.metadata.name}}-{{.Values.groupName.driverContainer}}:v{{.Values.kernelFullVersion}}"
